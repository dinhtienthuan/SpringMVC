<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

    <mvc:annotation-driven />
    <mvc:resources location="/resources/" mapping="/resources/**" />

    <context:annotation-config />
    <context:component-scan base-package="com.blogspot.dinhtienthuan.controller" />

    <!-- Tiles 3 Configuration -->
    <bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/tiles-config/templates.xml</value>
            </list>
        </property>
    </bean>

    <bean id="tilesViewResolver"
        class="org.springframework.web.servlet.view.tiles3.TilesViewResolver">
        <property name="order" value="0" />
    </bean>
    <!-- /Tiles 3 Configuration -->

    <!-- When chaining ViewResolvers, an InternalResourceViewResolver always 
        needs to be last, as it will attempt to resolve any view name, no matter 
        whether the underlying resource actually exists. -->
    <bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/jsp/" />
        <property name="suffix" value=".jsp" />
        <property name="order" value="#{tilesViewResolver.order + 1}" />
    </bean>
</beans>
